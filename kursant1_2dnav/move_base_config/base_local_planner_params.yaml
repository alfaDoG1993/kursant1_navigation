#For full documentation of the parameters in this file, and a list of all the
#parameters available for TrajectoryPlannerROS, please see
#http://www.ros.org/wiki/base_local_planner
TrajectoryPlannerROS:
  #Set the acceleration limits of the robot
  acc_lim_th: 3.2 #The rotational acceleration limit of the robot in radians/sec^2	
  acc_lim_x: 2.5 # The y acceleration limit of the robot in meters/sec^2
  acc_lim_y: 2.5 # The x acceleration limit of the robot in meters/sec^2

  #Set the velocity limits of the robot
  max_vel_x: 100.0 # The maximum forward velocity allowed for the base in meters/sec
  min_vel_x: 1.0 # The minimum forward velocity allowed for the base in meters/sec. 
  max_rotational_vel: 100.0 #The maximum rotational velocity allowed for the base in radians/sec
  min_rotation_vel: -100.0 # The minimum rotational velocity allowed for the base in radians/sec
  min_in_place_rotational_vel: 50.0 # The minimum rotational velocity allowed for the base while performing in-place rotations in radians/sec

  #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.2 # Speed used for driving during escapes in meters/sec. 
  
  #For this example, we'll use a holonomic robot
  holonomic_robot: false

  #Set the tolerance on achieving a goal
  xy_goal_tolerance: 0.05 # The tolerance in meters for the controller in the x & y distance when achieving a goal

  yaw_goal_tolerance: 0.1 # The tolerance in radians for the controller in yaw/rotation when achieving its goal

  #We'll configure how long and with what granularity we'll forward simulate trajectories
  sim_time: 1.7 # The amount of time to forward-simulate trajectories in seconds
  sim_granularity: 0.025 # The step size, in meters, to take between points on a given trajectory

  vx_samples: 3 # The number of samples to use when exploring the x velocity space
  vtheta_samples: 20 # The number of samples to use when exploring the theta velocity space

  #Parameters for scoring trajectories
  goal_distance_bias: 0.8
  path_distance_bias: 0.6
  occdist_scale: 0.01
  heading_lookahead: 0.325

  #We'll use the Dynamic Window Approach to control instead of Trajectory Rollout for this example
  dwa: true

  #How far the robot must travel before oscillation flags are reset
  oscillation_reset_dist: 0.05

  #Eat up the plan as the robot moves along it
  prune_plan: true
